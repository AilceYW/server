package test.serverframe.armc.server.manager.dao.mapper;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import test.serverframe.armc.server.manager.domain.Datum;

import java.util.List;

public interface DatumMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZL
     *
     * @mbg.generated
     */
    @Delete({
        "delete from QB_GYWB_ZL",
        "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String zlbh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZL
     *
     * @mbg.generated
     */
    @Insert({
        "insert into QB_GYWB_ZL (ZLBH, BT, ",
        "ZTC, MMDJ, CJR, ",
        "XGR, MGLX, FX, ",
        "HJID, FLID, ZLLY, ",
        "FJBS, KZBS, CJSJ, ",
        "XGSJ, XH)",
        "values (#{zlbh,jdbcType=VARCHAR}, #{bt,jdbcType=VARCHAR}, ",
        "#{ztc,jdbcType=VARCHAR}, #{mmdj,jdbcType=VARCHAR}, #{cjr,jdbcType=VARCHAR}, ",
        "#{xgr,jdbcType=VARCHAR}, #{mglx,jdbcType=VARCHAR}, #{fx,jdbcType=VARCHAR}, ",
        "#{hjid,jdbcType=VARCHAR}, #{flid,jdbcType=VARCHAR}, #{zlly,jdbcType=VARCHAR}, ",
        "#{fjbs,jdbcType=DECIMAL}, #{kzbs,jdbcType=DECIMAL}, #{cjsj,jdbcType=TIMESTAMP}, ",
        "#{xgsj,jdbcType=TIMESTAMP}, #{xh,jdbcType=VARCHAR})"
    })
    int insert(Datum record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZL
     *
     * @mbg.generated
     */
    @InsertProvider(type=DatumSqlProvider.class, method="insertSelective")
    int insertSelective(Datum record);

    /**
     * This method was generated by MyBatis Generator.  根据资料编号查询资料正文
     * This method corresponds to the database table QB_GYWB_ZL
     *
     * @mbg.generated
     */

    @Select({
        "select",
        "ZLBH, BT, ZTC, MMDJ, CJR, XGR, MGLX, FX, HJID, FLID, ZLLY, FJBS, KZBS, CJSJ, ",
        "XGSJ, XH",
        "from QB_GYWB_ZL",
        "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="ZLBH", property="zlbh", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="BT", property="bt", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZTC", property="ztc", jdbcType=JdbcType.VARCHAR),
        @Result(column="MMDJ", property="mmdj", jdbcType=JdbcType.VARCHAR),
        @Result(column="CJR", property="cjr", jdbcType=JdbcType.VARCHAR),
        @Result(column="XGR", property="xgr", jdbcType=JdbcType.VARCHAR),
        @Result(column="MGLX", property="mglx", jdbcType=JdbcType.VARCHAR),
        @Result(column="FX", property="fx", jdbcType=JdbcType.VARCHAR),
        @Result(column="HJID", property="hjid", jdbcType=JdbcType.VARCHAR),
        @Result(column="FLID", property="flid", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZLLY", property="zlly", jdbcType=JdbcType.VARCHAR),
        @Result(column="FJBS", property="fjbs", jdbcType=JdbcType.DECIMAL),
        @Result(column="KZBS", property="kzbs", jdbcType=JdbcType.DECIMAL),
        @Result(column="CJSJ", property="cjsj", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="XGSJ", property="xgsj", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="XH", property="xh", jdbcType=JdbcType.VARCHAR),
        @Result(column = "ZLBH", property = "datumText",
                one = @One(
                        select = "test.serverframe.armc.server.manager.dao.mapper.DatumTextMapper.selectByPrimaryKey"
                )
        )
    })
    Datum selectByPrimaryKey(String zlbh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZL
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DatumSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Datum record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZL
     *
     * @mbg.generated
     */
    @Update({
        "update QB_GYWB_ZL",
        "set BT = #{bt,jdbcType=VARCHAR},",
          "ZTC = #{ztc,jdbcType=VARCHAR},",
          "MMDJ = #{mmdj,jdbcType=VARCHAR},",
          "CJR = #{cjr,jdbcType=VARCHAR},",
          "XGR = #{xgr,jdbcType=VARCHAR},",
          "MGLX = #{mglx,jdbcType=VARCHAR},",
          "FX = #{fx,jdbcType=VARCHAR},",
          "HJID = #{hjid,jdbcType=VARCHAR},",
          "FLID = #{flid,jdbcType=VARCHAR},",
          "ZLLY = #{zlly,jdbcType=VARCHAR},",
          "FJBS = #{fjbs,jdbcType=DECIMAL},",
          "KZBS = #{kzbs,jdbcType=DECIMAL},",
          "CJSJ = #{cjsj,jdbcType=TIMESTAMP},",
          "XGSJ = #{xgsj,jdbcType=TIMESTAMP},",
          "XH = #{xh,jdbcType=VARCHAR}",
        "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Datum record);


    /**
     * 分页查询
     *
     * @param flid
     * @return
     */
    @Select({
            "select",
            "ZLBH, BT, ZTC, MMDJ, CJR, XGR, MGLX, FX, HJID, FLID, ZLLY, FJBS, KZBS, CJSJ, FJBS AS FJ, ",
            "XGSJ, XH",
            "from QB_GYWB_ZL",
            "where FLID = #{flid,jdbcType=VARCHAR} order by CJSJ desc"
    })
    @Results({
            @Result(column="ZLBH", property="zlbh", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="BT", property="bt", jdbcType=JdbcType.VARCHAR),
            @Result(column="ZTC", property="ztc", jdbcType=JdbcType.VARCHAR),
            @Result(column="MMDJ", property="mmdj", jdbcType=JdbcType.VARCHAR),
            @Result(column="CJR", property="cjr", jdbcType=JdbcType.VARCHAR),
            @Result(column="XGR", property="xgr", jdbcType=JdbcType.VARCHAR),
            @Result(column="MGLX", property="mglx", jdbcType=JdbcType.VARCHAR),
            @Result(column="FX", property="fx", jdbcType=JdbcType.VARCHAR),
            @Result(column="HJID", property="hjid", jdbcType=JdbcType.VARCHAR),
            @Result(column="FLID", property="flid", jdbcType=JdbcType.VARCHAR),
            @Result(column="ZLLY", property="zlly", jdbcType=JdbcType.VARCHAR),
            @Result(column="FJBS", property="fjbs", jdbcType=JdbcType.DECIMAL),
            @Result(column="KZBS", property="kzbs", jdbcType=JdbcType.DECIMAL),
            @Result(column="CJSJ", property="cjsj", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="XGSJ", property="xgsj", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="FJ", property="fj", jdbcType=JdbcType.INTEGER),
            @Result(column="XH", property="xh", jdbcType=JdbcType.VARCHAR)
    })
    List<Datum> selectAllDatumPages(String flid);


    @UpdateProvider(type = DatumSqlProvider.class, method = "updateZTC")
    int updateZTC(Datum datum);

    /**
     * @Descripttion 查询主题词
     * @Author jiangyuanwei
     * @Date 2018/10/9 9:40
     * @Param [zlbh]
     * @Return
     **/
    @Select({
            "select",
            "ZTC",
            "from qb_gywb_zl",
            "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "ZTC", property = "ztc", jdbcType = JdbcType.VARCHAR)
    })
    Datum selectZTC(String zlbh);


    @Select({
            "select",
            "ZLBH, BT, ZTC, MMDJ, CJR, XGR, MGLX, FX, HJID, FLID, ZLLY, FJBS, KZBS, CJSJ, ",
            "XGSJ, XH",
            "from qb_gywb_zl",
            "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "ZLBH", property = "zlbh", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "BT", property = "bt", jdbcType = JdbcType.VARCHAR),
            @Result(column = "ZTC", property = "ztc", jdbcType = JdbcType.VARCHAR),
            @Result(column = "MMDJ", property = "mmdj", jdbcType = JdbcType.VARCHAR),
            @Result(column = "CJR", property = "cjr", jdbcType = JdbcType.VARCHAR),
            @Result(column = "XGR", property = "xgr", jdbcType = JdbcType.VARCHAR),
            @Result(column = "MGLX", property = "mglx", jdbcType = JdbcType.VARCHAR),
            @Result(column = "FX", property = "fx", jdbcType = JdbcType.VARCHAR),
            @Result(column = "HJID", property = "hjid", jdbcType = JdbcType.VARCHAR),
            @Result(column = "FLID", property = "flid", jdbcType = JdbcType.VARCHAR),
            @Result(column = "ZLLY", property = "zlly", jdbcType = JdbcType.VARCHAR),
            @Result(column = "FJBS", property = "fjbs", jdbcType = JdbcType.BIGINT),
            @Result(column = "KZBS", property = "kzbs", jdbcType = JdbcType.BIGINT),
            @Result(column = "CJSJ", property = "cjsj", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "XGSJ", property = "xgsj", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "XH", property = "xh", jdbcType = JdbcType.VARCHAR),
            @Result(column = "FLID", property = "datumType",
                    one = @One(
                            select = "test.serverframe.armc.server.manager.dao.mapper.DatumTypeMapper.selectByPrimaryKey"
                    )
            )
    })
    Datum selectDatum(String zlbh);

    @Update({
            "update qb_gywb_zl",
            "set ZTC = null",
            "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    int updataByZTC(String zlbh);
}