package test.serverframe.armc.server.manager.dao.mapper;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import test.serverframe.armc.server.manager.domain.DatumText;

import java.util.List;

public interface DatumTextMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZLZW
     *
     * @mbg.generated
     */
    @Delete({
        "delete from QB_GYWB_ZLZW",
        "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String zlbh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZLZW
     *
     * @mbg.generated
     */
    @Insert({
        "insert into QB_GYWB_ZLZW (ZLBH, KZDX, ",
        "MTGS, WJZS, YS, ",
        "KZLJ, ZWWB)",
        "values (#{zlbh,jdbcType=VARCHAR}, #{kzdx,jdbcType=DECIMAL}, ",
        "#{mtgs,jdbcType=VARCHAR}, #{wjzs,jdbcType=DECIMAL}, #{ys,jdbcType=DECIMAL}, ",
        "#{kzlj,jdbcType=CLOB}, #{zwwb,jdbcType=CLOB})"
    })
    int insert(DatumText record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZLZW
     *
     * @mbg.generated
     */
    @InsertProvider(type=DatumTextSqlProvider.class, method="insertSelective")
    int insertSelective(DatumText record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZLZW
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "ZLBH, KZDX, MTGS, WJZS, YS, KZLJ, ZWWB",
        "from QB_GYWB_ZLZW",
        "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="ZLBH", property="zlbh", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="KZDX", property="kzdx", jdbcType=JdbcType.DECIMAL),
        @Result(column="MTGS", property="mtgs", jdbcType=JdbcType.VARCHAR),
        @Result(column="WJZS", property="wjzs", jdbcType=JdbcType.DECIMAL),
        @Result(column="YS", property="ys", jdbcType=JdbcType.DECIMAL),
        @Result(column="KZLJ", property="kzlj", jdbcType=JdbcType.CLOB),
        @Result(column="ZWWB", property="zwwb", jdbcType=JdbcType.CLOB)
    })
    DatumText selectByPrimaryKey(String zlbh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZLZW
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DatumTextSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(DatumText record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZLZW
     *
     * @mbg.generated
     */
    @Update({
        "update QB_GYWB_ZLZW",
        "set KZDX = #{kzdx,jdbcType=DECIMAL},",
          "MTGS = #{mtgs,jdbcType=VARCHAR},",
          "WJZS = #{wjzs,jdbcType=DECIMAL},",
          "YS = #{ys,jdbcType=DECIMAL},",
          "KZLJ = #{kzlj,jdbcType=CLOB},",
          "ZWWB = #{zwwb,jdbcType=CLOB}",
        "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(DatumText record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QB_GYWB_ZLZW
     *
     * @mbg.generated
     */
    @Update({
        "update QB_GYWB_ZLZW",
        "set KZDX = #{kzdx,jdbcType=DECIMAL},",
          "MTGS = #{mtgs,jdbcType=VARCHAR},",
          "WJZS = #{wjzs,jdbcType=DECIMAL},",
          "YS = #{ys,jdbcType=DECIMAL}",
        "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(DatumText record);


    /**
     * @Descripttion   查询主题词
     * @Author jiangyuanwei
     * @Date 2018/10/8 13:44
     * @Param [id]
     * @Return
     **/

    /**
     * @Descripttion  根据资料编号查询所有的资料数据
     * @Author jiangyuanwei
     * @Date 2018/10/12 15:00
     * @Param [zlbh]
     * @Return
     **/
    @Select({
            "select",
            "*",
            "from qb_gywb_zlzw ",
            "where ZLBH = #{zlbh,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "ZLBH", property = "zlbh", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "WJM", property = "wjm", jdbcType = JdbcType.VARCHAR),
            @Result(column = "WJMHZ", property = "wjmhz", jdbcType = JdbcType.VARCHAR),
            @Result(column = "KZDX", property = "kzdx", jdbcType = JdbcType.INTEGER),
            @Result(column = "MTGS", property = "mtgs", jdbcType = JdbcType.VARCHAR),
            @Result(column = "ZS", property = "zs", jdbcType = JdbcType.INTEGER),
            @Result(column = "YS", property = "ys", jdbcType = JdbcType.INTEGER),
            @Result(column = "KZLJ", property = "kzlj", jdbcType = JdbcType.LONGVARCHAR),
            @Result(column = "ZWWB", property = "zwwb", jdbcType = JdbcType.LONGVARCHAR),
            @Result(column = "ZLBH", property = "datum",
                    one = @One(
                            select = "test.serverframe.armc.server.manager.dao.mapper.DatumMapper.selectDatum"
                    )
            ),
            @Result(column = "ZLBH", property = "accessories",
                    many = @Many(
                            select = "test.serverframe.armc.server.manager.dao.mapper.DatumAccessoryMapper.getAllDatumAccessory"
                    )
            )
    })
    DatumText selectAll(String zlbh);
}